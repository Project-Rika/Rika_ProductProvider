// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rika_ProductProvier.Infrastructure.Data.Contexts;

#nullable disable

namespace Rika_ProductProvier.Infrastructure.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20241030190056_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rika_ProductProvier.Infrastructure.Data.Entities.ProductColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ColorName")
                        .IsUnique();

                    b.ToTable("ProductColors");
                });

            modelBuilder.Entity("Rika_ProductProvier.Infrastructure.Data.Entities.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductColorId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductSalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductSizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductColorId");

                    b.HasIndex("ProductSizeId");

                    b.HasIndex("ProductName", "ProductColorId", "ProductSizeId")
                        .IsUnique()
                        .HasFilter("[ProductColorId] IS NOT NULL");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Rika_ProductProvier.Infrastructure.Data.Entities.ProductSizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductSizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductSizeName")
                        .IsUnique();

                    b.ToTable("ProductSizes");
                });

            modelBuilder.Entity("Rika_ProductProvier.Infrastructure.Data.Entities.ProductEntity", b =>
                {
                    b.HasOne("Rika_ProductProvier.Infrastructure.Data.Entities.ProductColorEntity", "ProductColor")
                        .WithMany("Products")
                        .HasForeignKey("ProductColorId");

                    b.HasOne("Rika_ProductProvier.Infrastructure.Data.Entities.ProductSizeEntity", "ProductSize")
                        .WithMany("Products")
                        .HasForeignKey("ProductSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductColor");

                    b.Navigation("ProductSize");
                });

            modelBuilder.Entity("Rika_ProductProvier.Infrastructure.Data.Entities.ProductColorEntity", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Rika_ProductProvier.Infrastructure.Data.Entities.ProductSizeEntity", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
